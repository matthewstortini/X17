/run/initialize
  
# Use these open statements to open selected visualization
#
# Use this open statement to create an OpenGL view:
#/vis/open OGL 600x600-0+0
#/vis/open OGLSX 600x600-0+0
/vis/open VRML1FILE
#/vis/open HepRepFile

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# To get nice view
# put z-axis up and then set theta/phi of viewpoint
# turn off square world and lab hemisphere
#
/vis/viewer/set/upVector 0 0 1
/vis/geometry/set/visibility World 0 false


#/vis/viewer/set/style surface
/vis/viewer/set/style wireframe

/vis/viewer/set/hiddenMarker true
/vis/viewer/set/viewpointThetaPhi
#/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100
/vis/viewer/zoom 40


# draVolume creates the scene, adds physical volumes to the scene, attaches the scene handler, executes visualization
# flush declares end of visualizing
/vis/drawVolume
/vis/scene/add/axes 0 0.0 0 0.5 m
/vis/viewer/flush


# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
#/vis/scene/add/trajectories smooth
#/vis/scene/add/hits

# To superimpose all of the events from a given run:
#/vis/scene/endOfEventAction accumulate

/vis/viewer/update

